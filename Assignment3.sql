----QUE:1----
ALTER VIEW SALES.SALES_INFO
AS
SELECT P.product_id,P.product_name,SO.order_id FROM production.products P
 INNER JOIN SALES.order_items SI ON P.product_id=SI.product_id INNER JOIN SALES.orders SO
ON SO.order_id=SI.order_id

SELECT * FROM SALES.SALES_INFO

----QUE:2----

CREATE VIEW SALES.STAFF_SALES
AS 
SELECT SS.first_name,SS.last_name,SUM(quantity*list_price) AS 'ORDER VALUE' FROM SALES.order_items SOI INNER JOIN SALES.orders SO
ON SOI.order_id=SO.order_id INNER JOIN SALES.staffs SS ON SO.staff_id=SS.staff_id
GROUP BY SS.first_name,SS.last_name

SELECT * FROM SALES.STAFF_SALES

----QUE:3----
CREATE PROCEDURE SALES.USP_ADD_STORE
@STORE_NAME VARCHAR(255),
@STORE_COUNT INT OUTPUT
AS
BEGIN
   INSERT INTO SALES.stores (store_name) VALUES (@STORE_NAME)
   SELECT @STORE_COUNT=COUNT(store_name) FROM SALES.stores
   

END;

DECLARE @COUNT INT;
EXEC SALES.USP_ADD_STORE
@STORE_NAME='Rowlett Bikes',
@STORE_COUNT=@COUNT OUTPUT

SELECT @COUNT AS 'SOTRE COUNT'

-----QUE:4-----

CREATE PROCEDURE SALES.USP_STORE_WISE_SALES
AS
BEGIN
SELECT  SS.store_id,SS.store_name,SS.city,COUNT(order_id) AS 'ORDER COUNT'  
FROM SALES.stores SS INNER JOIN SALES.orders SO ON SS.store_id=SO.store_id
GROUP BY SS.store_id,SS.store_name,SS.CITY
END
EXEC SALES.USP_STORE_WISE_SALES

-----QUE:5-----
ALTER FUNCTION SALES.UDF_AVG (
@CUSTOMER_ID INT,
@YEAR  INT 
)
RETURNS INT
AS 
BEGIN
DECLARE @SUM INT 
  SELECT @SUM =SUM(QUANTITY*LIST_PRICE) FROM SALES.order_items WHERE order_id IN
  (SELECT order_id FROM SALES.orders WHERE customer_id=@CUSTOMER_ID AND YEAR(order_date)=@YEAR)
  RETURN @SUM 
END

(SELECT SALES.UDF_AVG(20,2018) AS ORDER_SUM)
 